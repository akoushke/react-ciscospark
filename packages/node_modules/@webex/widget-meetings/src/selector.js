import {createSelector} from 'reselect';

const getErrors = (state) => state.errors;
const getSDKState = (state) => state.spark.get('status');
const getSDKInstance = (state) => state.spark.get('spark');


const getMeetingsWidgetProps = createSelector(
  [getSDKState, getSDKInstance, getErrors],
  (sdkState, sdkInstance, errors) => {
    let error;

    // Check error store for an error
    if (errors.get('hasError')) {
      error = errors.get('errors').first();
    }


    // Meetings Widget is ready when SDK has device registered and websockets are connected
    const isReady = sdkState.authenticated && sdkState.registered && !sdkState.hasError && !error;

    return {
      error,
      isReady,
      sdkInstance
    };
  }
);

export default getMeetingsWidgetProps;
