import React, {Component} from 'react';
import PropTypes from 'prop-types';
import {connect} from 'react-redux';
import {compose} from 'recompose';

import WebexSDKAdapter from '@webex/sdk-component-adapter';
import {WebexDataProvider, WebexMeeting} from '@webex/components';

import getMeetingsWidgetProps from './selector';
import enhancers from './enhancers';


// Props injected via selector.js
const injectedPropTypes = {
  error: PropTypes.shape({
    displayTitle: PropTypes.string,
    displaySubtitle: PropTypes.string,
    temporary: PropTypes.bool
  }),
  isReady: PropTypes.bool,
  sdkInstance: PropTypes.object
};


// Props via the main react component
export const ownPropTypes = {
  accessToken: PropTypes.string.isRequired,
  destination: PropTypes.string.isRequired
};

export class ConnectedMeetingsWidget extends Component {
  shouldComponentUpdate(nextProps) {
    return nextProps !== this.props;
  }

  render() {
    const {
      isReady,
      sdkInstance
    } = this.props;


    return (
      <h1>Hello</h1>
    );
  }
}

ConnectedMeetingsWidget.propTypes = {
  ...injectedPropTypes,
  ...ownPropTypes
};


export default compose(
  connect(
    getMeetingsWidgetProps
  ),
  ...enhancers
)(ConnectedMeetingsWidget);
